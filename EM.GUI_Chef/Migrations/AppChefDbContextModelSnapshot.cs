// <auto-generated />
using System;
using EM.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EM.GUI_Chef.Migrations
{
    [DbContext(typeof(AppChefDbContext))]
    partial class AppChefDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EM.Domain.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChefEmail");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("DietaryRestrictions");

                    b.Property<int>("DishCategory");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("EM.Domain.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DessertId");

                    b.Property<int>("MainId");

                    b.Property<string>("Name");

                    b.Property<int>("StarterId");

                    b.Property<int>("WeekDayId");

                    b.HasKey("Id");

                    b.HasIndex("WeekDayId");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("EM.Domain.WeekDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MealDate");

                    b.Property<int>("WeekPlanId");

                    b.HasKey("Id");

                    b.HasIndex("WeekPlanId");

                    b.ToTable("WeekDay");
                });

            modelBuilder.Entity("EM.Domain.WeekPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChefEmail");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("WeekPlans");
                });

            modelBuilder.Entity("EM.Domain.Meal", b =>
                {
                    b.HasOne("EM.Domain.WeekDay", "WeekDay")
                        .WithMany("Meals")
                        .HasForeignKey("WeekDayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EM.Domain.WeekDay", b =>
                {
                    b.HasOne("EM.Domain.WeekPlan", "WeekPlan")
                        .WithMany("WeekDays")
                        .HasForeignKey("WeekPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
